name: Build Assets
on: [push]
jobs:
  listing:
    name: Generate assets matrix
    runs-on: ubuntu-22.04
    outputs:
      MATRIX: ${{ steps.generate_matrix.outputs.MATRIX }}
    steps:
      - name: Get latest code
        uses: actions/checkout@v3

      - name: Install jq
        shell: bash
        run: sudo apt-get install jq -y

      - name: Generate assets matrix
        shell: bash
        id: generate_matrix
        run: echo MATRIX=$(find assets -name '*.obj' -printf '%P\n' -type f | jq -R -s 'split("\n")[:-1]|{assets:.,mode:["serial","parallel"]}' -c) >> $GITHUB_OUTPUT

  build_asset:
    name: Build Assets
    needs: listing
    strategy:
      matrix: ${{ fromJSON(needs.listing.outputs.MATRIX) }}

    runs-on: ubuntu-22.04
    steps:
      - name: Get latest code
        uses: actions/checkout@v3

      - name: Install prerequisite
        shell: bash
        run: sudo apt-get update && sudo apt-get install libegl1-mesa libegl1 ninja-build -y

      - name: CMake x64
        shell: bash
        run: cmake OpenMP -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_PROCESSOR=x86-64 -B OpenMP/x64

      - name: Build x64
        shell: bash
        run: cmake --build OpenMP/x64 --target Multi-Segmenter --config Release

      - name: Launch segmenter
        shell: bash
        run: ./OpenMP/x64/Multi-Segmenter ${{ matrix.mode }} assets/${{ matrix.assets }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            assets/Segmented_*.obj
            assets/Segmented_*.mtl
            assets/Segmented_*.txt
            assets/complex_models/Segmented_*.obj
            assets/complex_models/Segmented_*.mtl
            assets/complex_models/Segmented_*.txt