name: Build Assets
on: [push]
jobs:
  listing:
    name: Generate assets matrix
    runs-on: ubuntu-22.04
    outputs:
      MATRIX: ${{ steps.generate_matrix.outputs.MATRIX }}
    steps:
      - name: Get latest code
        uses: actions/checkout@v3

      - name: Install jq
        shell: bash
        run: sudo apt-get install jq -y

      - name: Generate assets matrix
        shell: bash
        id: generate_matrix
        run: echo MATRIX=$(find assets -name '*.obj' -type f | jq -R -s 'split("\n")[:-1]|{assets:.}' -c) >> $GITHUB_OUTPUT

  build_asset:
    name: Build Artifacts
    needs: listing
    strategy:
      matrix: ${{ fromJSON(needs.listing.outputs.MATRIX) }}

    runs-on: ubuntu-22.04
    steps:
      - name: Get latest code
        uses: actions/checkout@v3

      - name: echo test
        shell: bash
        run: echo ${{ matrix.file }}


#  build_asset3:
#    name: Build Artifacts
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Get latest code
#        uses: actions/checkout@v3
#
#      - name: Launch renderer
#        shell: bash
#        run: sudo apt-get install libegl1-mesa libegl1 ninja-build -y
#
#      - name: CMake x64
#        shell: bash
#        run: cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_PROCESSOR=x86-64 -B x64
#
#      - name: Build x64
#        shell: bash
#        run: cmake --build x64 --target Multi-Segmenter --config Release
#
#      - name: Setup python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Install requirements
#        shell: bash
#        working-directory: utils/SimpleRenderer
#        run: pip install -r requirements.txt
#
#      - name: Test launch
#        shell: bash
#        run: ./x64/Multi-Segmenter assets/Cube_noised.obj
#
#      - name: Launch renderer
#        shell: bash
#        run: python utils/SimpleRenderer/renderer.py assets/Segmented_Cube_noised.obj --scale 10 --align --videoonly --frame 5
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: build
#          path: |
#            assets/*.mp4